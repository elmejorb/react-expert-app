{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifexpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","protoTypes","PropTypes","func","isRequired","GifGridItem","title","url","className","src","alt","getGif","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifexpertApp","categorias","onClick","ReactDOM","render","document","getElementById"],"mappings":"wPAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAkBhD,OACI,0BAAMC,SAXW,SAAEC,GACnBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IACxBR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAoBO,OACrCN,EAAc,OAOlB,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,YAuB/BZ,EAAYe,WAAa,CACrBd,c,OAAgBe,EAAUC,KAAKC,YC9B5B,IAAMC,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACjC,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,2BAAKA,K,uBCHJK,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACH,mCACTN,EAFY,iDAEqCO,UAAUF,GAF/C,6BACH,oCADG,SAIEG,MAAMR,GAJR,cAIXS,EAJW,gBAKMA,EAAKC,OALX,uBAKTC,EALS,EAKTA,KACFC,EAAOD,EAAKE,KAAM,SAAAC,GAChB,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAKc,EAAIE,OAAOC,iBAAiBjB,QAV5B,kBAaVY,GAbU,4CAAH,sDCCNM,EAAU,SAAC,GAAoB,IAAjBb,EAAgB,EAAhBA,SAAgB,ECEf,SAAEA,GAAe,IAAD,EAEdxB,mBAAS,CAC/B8B,KAAM,GACNQ,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAkBxC,OAVAC,qBAAU,WACNlB,EAAQC,GACHkB,MAAM,SAAAC,GAAI,OAAIH,EAAU,CACrBV,KAAMa,EACNL,SAAS,SAElB,CAAEd,IAIEe,EDhB0BK,CAAcpB,GAAlCW,EAJ0B,EAI/BL,KAAaQ,EAJkB,EAIlBA,QAGrB,OACI,oCACE,wBAAIlB,UAAU,qCAAqCI,GAEjDc,GAAW,uBAAGlB,UAAU,oCAAb,eAEb,yBAAKA,UAAU,aAENe,EAAOH,KAAK,SAACC,GAAD,OACN,kBAAC,EAAD,eACGY,IAAKZ,EAAIC,IACLD,UEjBnBa,EAAe,WAAO,IAAD,EACM9C,mBAAS,CAAC,iBADhB,mBACvB+C,EADuB,KACXhD,EADW,KAM9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAAQiD,QARE,WACdjD,EAAc,GAAD,mBAAKgD,GAAL,CAAiB,QAO1B,kBACA,4BAEQA,EAAWf,KAAK,SAAAxB,GAAG,OACf,kBAAC,EAAD,CAASqC,IAAMrC,EACXgB,SAAWhB,UCfvCyC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.64e343b2.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ( { setCategorias } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInputChange = ( e ) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ){\r\n                setCategorias(cat => [inputValue, ...cat]);\r\n                setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (        \r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\" \r\n                value={ inputValue } \r\n                onChange={ handleInputChange } />\r\n        </form>        \r\n    )\r\n}\r\n\r\nAddCategory.protoTypes = {\r\n    setCategorias : PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title, url} ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\n\r\nexport const getGif = async (category) => {\r\n    const apiKey = 'R04I7Q3nXWoaUxQdo6GrzbDwKkNtCobY';\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=${apiKey}`\r\n        \r\n     const resp = await fetch(url);\r\n     const { data } = await resp.json();\r\n     const gifs = data.map(  img  => {\r\n             return {\r\n                 id: img.id,\r\n                 title: img.title,\r\n                 url: img.images.downsized_medium.url\r\n             }\r\n     });\r\n     return gifs;\r\n     \r\n }\r\n","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ( { category } ) => {\r\n\r\n    \r\n    \r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n\r\n    return (\r\n        <>    \r\n          <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n          { loading && <p className=\"animate__animated animate__flash\">Loading ...</p>}\r\n\r\n          <div className=\"card-grid\">\r\n               {\r\n                   images.map( (img) => (\r\n                         <GifGridItem \r\n                            key={img.id} \r\n                            {...img} />\r\n                   ))\r\n               }\r\n           </div>\r\n        </>\r\n    )\r\n}","import { useState, useEffect } from \"react\"\r\nimport { getGif } from \"../helpers/getGifs\";\r\n\r\n\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    //permite que se ejecute una sola vez al renderizar el componente\r\n    useEffect(() => {\r\n        getGif( category )\r\n            .then( imgs => setState( {\r\n                data: imgs,\r\n                loading: false\r\n            } ))\r\n    }, [ category ])\r\n\r\n    \r\n\r\n    return state;\r\n}\r\n","//snipef rafc\r\nimport React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifexpertApp = () => {\r\n    const [categorias, setCategorias] = useState(['pink panther'])\r\n\r\n    const handleAdd = () => {        \r\n        setCategorias([...categorias, \"\"]);\r\n    }\r\n    return (\r\n        <>\r\n            <h2>GifexpertApp</h2>\r\n            <AddCategory setCategorias={setCategorias} />\r\n            <hr/>\r\n            <button onClick={ handleAdd }>Add categorias</button>\r\n            <ol>\r\n                {\r\n                    categorias.map( cat => \r\n                        <GifGrid key={ cat } \r\n                            category={ cat }\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n            \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifexpertApp } from './GifexpertApp';\n\n\nReactDOM.render(\n    <GifexpertApp />,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}